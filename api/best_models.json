{
    "Logistic Regression": "LogisticRegression(max_iter=1000, random_state=123)",
    "Extra Trees": "ExtraTreesClassifier(max_depth=10, min_samples_split=5, n_estimators=50,\n                     random_state=123)",
    "Random Forest": "RandomForestClassifier(random_state=123)",
    "XGBoost": "XGBClassifier(base_score=None, booster=None, callbacks=None,\n              colsample_bylevel=None, colsample_bynode=None,\n              colsample_bytree=None, device=None, early_stopping_rounds=None,\n              enable_categorical=False, eval_metric='logloss',\n              feature_types=None, gamma=None, grow_policy=None,\n              importance_type=None, interaction_constraints=None,\n              learning_rate=0.2, max_bin=None, max_cat_threshold=None,\n              max_cat_to_onehot=None, max_delta_step=None, max_depth=5,\n              max_leaves=None, min_child_weight=None, missing=nan,\n              monotone_constraints=None, multi_strategy=None, n_estimators=200,\n              n_jobs=None, num_parallel_tree=None, random_state=123, ...)",
    "Gradient Boosting": "GradientBoostingClassifier(random_state=123)",
    "SVM": "SVC(probability=True, random_state=123)",
    "LDA": "LinearDiscriminantAnalysis()",
    "QDA": "QuadraticDiscriminantAnalysis()",
    "Naive Bayes": "GaussianNB()",
    "K Neighbors": "KNeighborsClassifier(n_neighbors=7, weights='distance')",
    "AdaBoost": "AdaBoostClassifier(algorithm='SAMME', n_estimators=200, random_state=123)"
}